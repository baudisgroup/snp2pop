label$name <- Neoplasm_Core$`Preferred Term`[match(label$type,Neoplasm_Core$Code)]
label$name <- sapply(label$name,function(x) paste(strsplit(x,",")[[1]],collapse ='\t')) ## replace comma by newline so can be seen on plot
label$name <- sapply(label$name,function(x) paste(strsplit(x,"/")[[1]],collapse ='\t')) ## replace / by newline so can be seen on plot
label$name
label$name <- Neoplasm_Core$`Preferred Term`[match(label$type,Neoplasm_Core$Code)]
label$name <- sapply(label$name,function(x) paste(strsplit(x,",")[[1]],collapse ='\n')) ## replace comma by newline so can be seen on plot
label$name <- sapply(label$name,function(x) paste(strsplit(x,"/")[[1]],collapse ='\n')) ## replace / by newline so can be seen on plot
colnames(residual_avg) <- label$name
resid_avgm <- melt(residual_avg)
resid_m <- data.frame(position = rep(1:3044,45), first_q = resid_minm$value, average = resid_avgm$value, third_q = resid_maxm$value, type = resid_avgm$variable)
View(resid_m)
ggplot(resid_m,aes(x=position,y=average))  + geom_ribbon(aes(ymin = first_q,ymax=third_q), color = "grey70") + geom_line(size = 0.8) + facet_wrap(~type)
ggsave('/Users/pgweb/Projects/CNVpattern/residual.pdf',height=12,width = 15)
ggplot(resid_m,aes(x=position,y=average))  + geom_ribbon(aes(ymin = first_q,ymax=third_q), color = "grey70") + geom_line(size = 0.5, color = 'red') + facet_wrap(~type)
ggsave('/Users/pgweb/Projects/CNVpattern/residual.pdf',height=12,width = 15)
abfrac <- read.table('/Users/pgweb/Projects/CNVpattern/abfrac.txt',stringsAsFactors = F)
names(abfrac) <- c('ID','abfrac')
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop_.2.tsv',stringsAsFactors = F)
names(pop) <- c('ID','e1','e2','e3','e4','e5','result','score')
pop2 <- pop[which(pop$ID %in% abfrac$ID),]
pop2$abfrac <- abfrac[match(pop2$ID,abfrac$ID),2]
plot(pop2$abfrac,pop2$score)
summary(pop2$score)
boxplot(pop2$score)
cor(pop2$score,pop2$abfrac)
race_meta =read.table('/Users/pgweb/arraydata/aroma/MetaExtracts/raceInfo_final.tsv',stringsAsFactors = F)
labels <- c(3,4,4,2,4,
1,4,1,3,5,
3,1,6,6,6,
4,1,2,6,6,
2,6,4,3,6,
6,1,4,6,4,
1,2,4,6,4)
names(labels) <- unique(race_meta $V4 )
labels_pop <- rank(unique(pop2$result))
names(labels_pop) <- unique(pop2$result)
pop2$result <- labels_pop[pop2$result]
race_meta$V4 <- labels[race_meta$V4]
race_meta <- race_meta[race_meta$V4 != 6,]
pop3 <- pop2[which(pop2$ID %in% race_meta$V2),]
pop3$meta_result <- race_meta[match(pop3$ID,race_meta$V2),4]
plot(pop3$result,pop3$meta_result)
cor(pop3$result,pop3$meta_result)
tb <- table(pop3$result,pop3$meta_result)
tb2 <- data.frame(prediction = rep(c('AFR','AMR','EAS','EUR'),4),meta=rep(c('AFR','AMR','EAS','EUR'),each=4))
tb2$count <- as.vector(tb)
tb2 <- tb2[tb2$count>0,]
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
pop3 <- pop3[which(pop3$score > 0.2),]
pop3 <- pop2[which(pop2$ID %in% race_meta$V2),]
pop3 <- pop3[which(pop3$score > 0.2),]
pop3 <- pop3[which(pop3$score > 0.3),]
pop3$meta_result <- race_meta[match(pop3$ID,race_meta$V2),4]
plot(pop3$result,pop3$meta_result)
cor(pop3$result,pop3$meta_result)
tb <- table(pop3$result,pop3$meta_result)
tb2 <- data.frame(prediction = rep(c('AFR','AMR','EAS','EUR'),4),meta=rep(c('AFR','AMR','EAS','EUR'),each=4))
tb2$count <- as.vector(tb)
tb2 <- tb2[tb2$count>0,]
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
tb
pop3 <- pop2[which(pop2$ID %in% race_meta$V2),]
pop3 <- pop3[which(pop3$score > 0.2),]
table(pop3$result,pop3$meta_result)
pop3$meta_result <- race_meta[match(pop3$ID,race_meta$V2),4]
table(pop3$result,pop3$meta_result)
pop3 <- pop3[which(pop3$score > 0.5),]
pop3$meta_result <- race_meta[match(pop3$ID,race_meta$V2),4]
table(pop3$result,pop3$meta_result)
pop3$score[which(pop3$result==2 & pop3$meta_result ==4)]
summary(pop3$score[which(pop3$result==2 & pop3$meta_result ==4)])
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(label = count)) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(x = meta, y = prediction,label = count)) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(x = meta, y = prediction-1,label = count)) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(x = meta, y = prediction,label = count,hjust = 'bottom')) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(x = meta, y = prediction,label = count,vjust = 0)) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(x = meta, y = prediction,label = count,vjust = 1)) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(x = meta, y = prediction,label = count,vjust = 2)) + xlab('metadata extraction') + ggtitle('Validation on 666 samples with ethnic metadata')
ggsave('/Users/pgweb/Projects/CNVpattern/validation_pop.pdf')
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop.tsv',stringsAsFactors = F)
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop.tsv',stringsAsFactors = F,header = T)
library(dplyr)
nrow(filter(pop,score>0.1))
write.table(filter(pop,score>0.1),'/Users/pgweb/Projects/CNVpattern/all_pop.1.tsv',sep = '\t',quote = F,row.names = F)
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop_.1.tsv',stringsAsFactors = F)
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop.1.tsv',stringsAsFactors = F)
names(pop) <- c('ID','e1','e2','e3','e4','e5','result','score')
pop2 <- pop[which(pop$ID %in% abfrac$ID),]
pop2$abfrac <- abfrac[match(pop2$ID,abfrac$ID),2]
plot(pop2$abfrac,pop2$score)
summary(pop2$score)
boxplot(pop2$score)
names(abfrac) <- c('ID','abfrac')
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop.1.tsv',stringsAsFactors = F,header = T)
names(pop) <- c('ID','e1','e2','e3','e4','e5','result','score')
pop2 <- pop[which(pop$ID %in% abfrac$ID),]
pop2$abfrac <- abfrac[match(pop2$ID,abfrac$ID),2]
plot(pop2$abfrac,pop2$score)
boxplot(pop2$score)
cor(pop2$score,pop2$abfrac)
library(readr)
all_pop_1 <- read_delim("/Users/pgweb/Projects/CNVpattern/all_pop.1.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(all_pop_1)
names(pop) <- c('ID','e1','e2','e3','e4','e5','result','score')
pop2 <- pop[which(pop$ID %in% abfrac$ID),]
pop2$abfrac <- abfrac[match(pop2$ID,abfrac$ID),2]
plot(pop2$abfrac,pop2$score)
boxplot(pop2$score)
pop <- read_delim("/Users/pgweb/Projects/CNVpattern/all_pop.1.tsv",
+     "\t", escape_double = FALSE, trim_ws = TRUE)
pop <- read_delim("/Users/pgweb/Projects/CNVpattern/all_pop.1.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
names(pop) <- c('ID','e1','e2','e3','e4','e5','result','score')
pop2 <- pop[which(pop$ID %in% abfrac$ID),]
pop2$abfrac <- abfrac[match(pop2$ID,abfrac$ID),2]
plot(pop2$abfrac,pop2$score)
summary(pop2$score)
cor(pop2$score,pop2$abfrac)
library(readr)
Pop <- read_delim("/Users/pgweb/Projects/CNVpattern/all_pop.1.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(Pop)
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop.1.tsv',stringsAsFactors = F)
names(pop) <- c('ID','e1','e2','e3','e4','e5','result','score')
pop2 <- pop[which(pop$ID %in% abfrac$ID),]
pop2$abfrac <- abfrac[match(pop2$ID,abfrac$ID),2]
cor(pop2$score,pop2$abfrac)
sessionInfo()
Neoplasm_Core_Hierarchy <- readLines("/Users/pgweb/Projects/CNVpattern/Neoplasm_Core_Hierarchy.txt")
Neoplasm_Core_Hierarchy <- lapply(Neoplasm_Core_Hierarchy, function(x){
elements <- strsplit(x,'\t',fixed = T)[[1]]
description <- elements[length(elements)]
split_desc <- strsplit(description,' (C',fixed = T)[[1]]
name <- split_desc[1]
code <- split_desc[2]
code <- paste0('C',substr(code,1, nchar(code)-1))
return(c(name,code))})
hierarchy_df <- data.frame(name = sapply(Neoplasm_Core_Hierarchy,function(x)x[1]),code = sapply(Neoplasm_Core_Hierarchy,function(x)x[2]),stringsAsFactors =F)
label <- read_delim("/Users/pgweb/Projects/CNVpattern/data/ncit/sample_ncit_filter_label.tsv",
"\t", escape_double = FALSE,
trim_ws = TRUE)
library(readr)
label <- read_delim("/Users/pgweb/Projects/CNVpattern/data/ncit/sample_ncit_filter_label.tsv",
"\t", escape_double = FALSE,
trim_ws = TRUE)
label$name <- hierarchy_df$name[match(label$type,hierarchy_df$code)]
Neoplasm_Core <- read_delim("/Users/pgweb/Projects/CNVpattern/Neoplasm_Core.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
hierarchy_df$name[match(label$type,Neoplasm_Core$Code)]
label$type[is.na(match(label$type,Neoplasm_Core$Code))]
hierarchy_df$name[match(missingtype,hierarchy_df$code)]
missingtype <- label$type[is.na(match(label$type,Neoplasm_Core$Code))]
hierarchy_df$name[match(missingtype,hierarchy_df$code)]
callset <- read_delim("/Users/pgweb/Projects/CNVpattern/data/ncit/sample_callset_filter_recode.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
callset <- read_delim("/Users/pgweb/Projects/CNVpattern/data/ncit/sample_callset_filter_recode.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
label <- read_delim("/Users/pgweb/Projects/CNVpattern/data/ncit/sample_ncit_filter_label_recode.tsv",
"\t", escape_double = FALSE,
trim_ws = TRUE)
label <- read_delim("/Users/pgweb/Projects/CNVpattern/data/ncit/sample_ncit_filter_label_recode_name.tsv",
"\t", escape_double = FALSE,
trim_ws = TRUE)
encoder2layer_reconstruction <- read_delim("~/Projects/CNVpattern/data/ncit/result/encoder2layer_reconstruction.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
encoder2layer_reconstruction <- read_delim("~/Projects/CNVpattern/data/ncit/result200-20//encoder2layer_reconstruction.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
encoder2layer_original <- read_delim("~/Projects/CNVpattern/data/ncit/result200-20/encoder2layer_original.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
labels <- encoder2layer_original[,3046]
get_quantile <- function(data_frame,label) {
df_avg <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,median)),col.names = label$type)
colnames(df_avg) <- label$name
df_max <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[5])),col.names = label$type)
df_min <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[2])),col.names = label$type)
library(ggplot2)
library(reshape2)
resid_avgm <- melt(df_avg,id.vars = c())
resid_maxm <- melt(df_max,id.vars = c())
resid_minm <- melt(df_min,id.vars = c())
# resid_avgm$position <- rep(1:3044,45)
resid_m <- data.frame(position = rep(1:3044,45), first_q = resid_minm$value, average = resid_avgm$value, third_q = resid_maxm$value, type = resid_avgm$variable)
}
recons <- get_quantile(encoder2layer_reconstruction[,1:3045],label)
get_quantile <- function(data_frame,label) {
df_avg <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,median)),col.names = label$type)
colnames(df_avg) <- label$name
df_max <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[5])),col.names = label$type)
df_min <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[2])),col.names = label$type)
library(ggplot2)
library(reshape2)
resid_avgm <- melt(df_avg,id.vars = c())
resid_maxm <- melt(df_max,id.vars = c())
resid_minm <- melt(df_min,id.vars = c())
# resid_avgm$position <- rep(1:3044,45)
resid_m <- data.frame(position = rep(1:3044,nrow(label)), first_q = resid_minm$value, average = resid_avgm$value, third_q = resid_maxm$value, type = resid_avgm$variable)
}
recons <- get_quantile(encoder2layer_reconstruction[,1:3045],label)
3044*53
recons <- get_quantile(encoder2layer_reconstruction[,2:3045],label)
ggplot(recons,aes(x=position,y=average))  + geom_ribbon(aes(ymin = first_q,ymax=third_q), color = "grey70") + geom_line(size = 0.5, color = 'red') + facet_wrap(~type)
ggsave('/Users/pgweb/Projects/CNVpattern/reconstruct2.pdf',height=12,width = 15)
encoder2layer_200 <-  read_delim('/Users/pgweb/Projects/CNVpattern/data/ncit/result200-20/encoded200_2layer.tsv',
"\t", escape_double = FALSE, trim_ws = TRUE)
View(encoder2layer_200)
encoder2layer_200 <-  read_delim('/Users/pgweb/Projects/CNVpattern/data/ncit/result200-20/encoded200_2layer.tsv',
"\t", escape_double = FALSE, col_names = FALSE,  trim_ws = TRUE)
View(encoder2layer_200)
y_train <- read_delim('/Users/pgweb/Projects/CNVpattern/data/ncit/result200-20/y_train.txt',
"\t", escape_double = FALSE, col_names = FALSE,  trim_ws = TRUE)
names(y_train) <- c('index','NCIT')
encoded200 <- get_quantile(encoder2layer_200,y_train)
resid_m <- data.frame(position = rep(1:nrow(data_frame),nrow(label)), first_q = resid_minm$value, average = resid_avgm$value, third_q = resid_maxm$value, type = resid_avgm$variable)
get_quantile <- function(data_frame,label) {
df_avg <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,median)),col.names = label$type)
colnames(df_avg) <- label$name
df_max <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[5])),col.names = label$type)
df_min <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[2])),col.names = label$type)
library(ggplot2)
library(reshape2)
resid_avgm <- melt(df_avg,id.vars = c())
resid_maxm <- melt(df_max,id.vars = c())
resid_minm <- melt(df_min,id.vars = c())
# resid_avgm$position <- rep(1:3044,45)
resid_m <- data.frame(position = rep(1:nrow(data_frame),nrow(label)), first_q = resid_minm$value, average = resid_avgm$value, third_q = resid_maxm$value, type = resid_avgm$variable)
}
encoded200 <- get_quantile(encoder2layer_200,y_train,label)
get_quantile <- function(data_frame,labels,label) {
df_avg <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,median)),col.names = label$type)
colnames(df_avg) <- label$name
df_max <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[5])),col.names = label$type)
df_min <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[2])),col.names = label$type)
library(ggplot2)
library(reshape2)
resid_avgm <- melt(df_avg,id.vars = c())
resid_maxm <- melt(df_max,id.vars = c())
resid_minm <- melt(df_min,id.vars = c())
# resid_avgm$position <- rep(1:3044,45)
resid_m <- data.frame(position = rep(1:nrow(data_frame),nrow(label)), first_q = resid_minm$value, average = resid_avgm$value, third_q = resid_maxm$value, type = resid_avgm$variable)
}
encoded200 <- get_quantile(encoder2layer_200,y_train,label)
get_quantile <- function(data_frame,labels,label) {
df_avg <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,median)),col.names = label$type)
colnames(df_avg) <- label$name
df_max <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[5])),col.names = label$type)
df_min <- as.data.frame(lapply(1:nrow(label),function(x) apply(data_frame[labels$NCIT == x,],2,function(x) summary(x)[2])),col.names = label$type)
library(ggplot2)
library(reshape2)
resid_avgm <- melt(df_avg,id.vars = c())
resid_maxm <- melt(df_max,id.vars = c())
resid_minm <- melt(df_min,id.vars = c())
# resid_avgm$position <- rep(1:3044,45)
resid_m <- data.frame(position = rep(1:ncol(data_frame),nrow(label)), first_q = resid_minm$value, average = resid_avgm$value, third_q = resid_maxm$value, type = resid_avgm$variable)
}
encoded200 <- get_quantile(encoder2layer_200,y_train,label)
ggplot(encoded200,aes(x=position,y=average))  + geom_ribbon(aes(ymin = first_q,ymax=third_q), color = "grey70") + geom_line(size = 0.5, color = 'red') + facet_wrap(~type)
ggsave('/Users/pgweb/Projects/CNVpattern/encoded200.pdf',height=12,width = 15)
encoder2layer_20 <-  read_delim('/Users/pgweb/Projects/CNVpattern/data/ncit/result200-20/encoded20_2layer.tsv',
"\t", escape_double = FALSE, col_names = FALSE,  trim_ws = TRUE)
encoded200 <- get_quantile(encoder2layer_20,y_train,label)
ggplot(encoded200,aes(x=position,y=average))  + geom_ribbon(aes(ymin = first_q,ymax=third_q), color = "grey70") + geom_line(size = 0.5, color = 'red') + facet_wrap(~type)
ggsave('/Users/pgweb/Projects/CNVpattern/encoded20.pdf',height=12,width = 15)
library(readr)
fileList <- read_delim("~/Dropbox (baudisgroup)/baudisgroup/group/Qingyao/short_scripts/fileList_9_samples.tsv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(fileList)
blockfile_PLATFORM_allinfo <- read_delim("/Users/pgweb/arraydata/aroma/MetaExtracts/blockfile_PLATFORM_allinfo.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
a <- subset(blockfile_PLATFORM_allinfo,blockfile_PLATFORM_allinfo$Platform %in% c("GPL2641","GPL2004","GPL2005",
"GPL3718","GPL3720","GPL18637",
"GPL6804","GPL6801","GPL16131"),select = c("Sample","SampleType","Platform"))
b <- a
colnames(b) <- c('Sample','Type','Plf')
df <- data.frame(Plf=c("GPL2641","GPL2004","GPL2005",
"GPL3718","GPL3720","GPL18637",
"GPL6804","GPL6801","GPL16131"),
Platform = c('Mapping10K_Xba142','Mapping50K_Hind240','Mapping50K_Xba240',
'Mapping250K_Nsp','Mapping250K_Sty','CytoScan750K_Array',
'GenomeWideSNP_5','GenomeWideSNP_6','CytoScanHD_Array'))
names(fileList)
names(fileList) <- c('Series','Sample','Plf')
fileList$Type <- b$Type[match(fileList$Sample,b$Sample)]
b <- merge(b,df)
p <- ggplot(b,aes(x=Platform,fill=Type))
c <- subset(b,b$Type=="Tumor",select = "Platform")
d <- subset(b,b$Type=="Normal",select = "Platform")
data <- cbind(table(c),table(d))
colnames(data) <- c('Tumor','Normal')
data <- data[order(data[,1]),]
data <- melt(data)
colnames(data) <- c('Platform','Type','No.samples')
data <- transform(data,Platform = factor(Platform,levels = unique(Platform)))
p <- ggplot(data,aes(x=Platform,y=No.samples,fill=Type))
p+ geom_bar(position="dodge",stat = "identity")+coord_flip() +theme_bw() +
scale_y_continuous(breaks = seq(0, 14000, by = 2000)) +
labs(title = 'Total 58290 samples, incl. 46599 tumor samples') +
xlab(NULL)
p <- ggplot(data,aes(x=Platform,y=No.samples,fill=Type))
p+ geom_bar(position="dodge",stat = "identity")+coord_flip() +theme_bw() +
scale_y_continuous(breaks = seq(0, 14000, by = 2000)) +
labs(title = sprintf('Total %d samples, incl. %d tumor samples',sum(data$No.samples),sum(data$No.samples[data$Type=='Tumor']))) +
xlab(NULL)
sum(data$No.samples)
b <- fileList
c <- subset(b,b$Type=="Tumor",select = "Platform")
d <- subset(b,b$Type=="Normal",select = "Platform")
data <- cbind(table(c),table(d))
b <- merge(b,df)
p <- ggplot(b,aes(x=Platform,fill=Type))
p+ geom_bar(position="dodge",stat = "count")+coord_flip()
c <- subset(b,b$Type=="Tumor",select = "Platform")
d <- subset(b,b$Type=="Normal",select = "Platform")
data <- cbind(table(c),table(d))
colnames(data) <- c('Tumor','Normal')
data <- data[order(data[,1]),]
data <- melt(data)
colnames(data) <- c('Platform','Type','No.samples')
data <- transform(data,Platform = factor(Platform,levels = unique(Platform)))
p <- ggplot(data,aes(x=Platform,y=No.samples,fill=Type))
p+ geom_bar(position="dodge",stat = "identity")+coord_flip() +theme_bw() +
scale_y_continuous(breaks = seq(0, 14000, by = 2000)) +
labs(title = sprintf('Total %d samples, incl. %d tumor samples',sum(data$No.samples),sum(data$No.samples[data$Type=='Tumor']))) +
xlab(NULL)
ggsave('/Users/pgweb/Projects/CNVpattern/sampleStat2.pdf',width=6,height=3)
abfrac <- read.table('/Users/pgweb/Projects/CNVpattern/abfrac.txt',stringsAsFactors = F)
names(abfrac) <- c('ID','abfrac')
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop.tsv',stringsAsFactors = F,header = T) ## all_pop_.2.tsv  OR all_pop.1.tsv
names(pop) <- c('ID','e1','e2','e3','e4','e5','result','score')
pop2 <- pop[which(pop$ID %in% abfrac$ID),]
pop2$abfrac <- abfrac[match(pop2$ID,abfrac$ID),2]
pop2$score <- as.numeric(pop2$score)
plot(pop2$abfrac,pop2$score)
race_meta =read.table('/Users/pgweb/arraydata/aroma/MetaExtracts/raceInfo_final.tsv',stringsAsFactors = F)
labels <- c(3,4,4,2,4,
1,4,1,3,5,
3,1,6,6,6,
4,1,2,6,6,
2,6,4,3,6,
6,1,4,6,4,
1,2,4,6,4)
names(labels) <- unique(race_meta $V4 )
labels_pop <- rank(unique(pop2$result))
names(labels_pop) <- unique(pop2$result)
pop2$result <- labels_pop[pop2$result]
race_meta$V4 <- labels[race_meta$V4]
race_meta <- race_meta[race_meta$V4 != 6,]
pop3 <- pop2[which(pop2$ID %in% race_meta$V2),]
pop3$meta_result <- race_meta[match(pop3$ID,race_meta$V2),4]
plot(pop3$result,pop3$meta_result)
cor(pop3$result,pop3$meta_result)
tb <- table(pop3$result,pop3$meta_result)
tb2 <- data.frame(prediction = rep(c('AFR','AMR','EAS','EUR'),4),meta=rep(c('AFR','AMR','EAS','EUR'),each=4))
tb2$count <- as.vector(tb)
tb2 <- tb2[tb2$count>0,]
library(ggplot2)
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(x = meta, y = prediction,label = count,vjust = 2)) + xlab('metadata extraction') + ggtitle(sprintf('Validation on %d samples with ethnic metadata',sum(tb2$count)))
ggplot(tb2)+ geom_point(aes(x=meta,y=prediction,size=count,alpha = count)) +
geom_text(aes(x = meta, y = prediction,label = count,vjust = 2)) + xlab('metadata extraction') + ggtitle(sprintf('Validation on %d samples with population metadata',sum(tb2$count)))
ggsave('/Users/pgweb/Projects/CNVpattern/validation_pop.pdf')
pop <- read.table('/Users/pgweb/Projects/CNVpattern/all_pop.tsv',stringsAsFactors = F,header = T) ## all_pop_.2.tsv  OR all_pop.1.tsv
View(pop)
table(pop$result)
table(pop$result)/sum(table(pop$result)-565)
hierarchy_df$name[match(missingtype,hierarchy_df$code)]
label <- read_delim("/Users/pgweb/Projects/CNVpattern/data/ncit/sample_ncit_filter_label.tsv",
"\t", escape_double = FALSE,
trim_ws = TRUE)
hierarchy_df <- data.frame(name = sapply(Neoplasm_Core_Hierarchy,function(x)x[1]),code = sapply(Neoplasm_Core_Hierarchy,function(x)x[2]),stringsAsFactors =F)
Neoplasm_Core_Hierarchy <- readLines("/Users/pgweb/Projects/CNVpattern/Neoplasm_Core_Hierarchy.txt")
Neoplasm_Core_Hierarchy <- lapply(Neoplasm_Core_Hierarchy, function(x){
elements <- strsplit(x,'\t',fixed = T)[[1]]
description <- elements[length(elements)]
split_desc <- strsplit(description,' (C',fixed = T)[[1]]
name <- split_desc[1]
code <- split_desc[2]
code <- paste0('C',substr(code,1, nchar(code)-1))
return(c(name,code))})
hierarchy_df <- data.frame(name = sapply(Neoplasm_Core_Hierarchy,function(x)x[1]),code = sapply(Neoplasm_Core_Hierarchy,function(x)x[2]),stringsAsFactors =F)
library(readr)
label <- read_delim("/Users/pgweb/Projects/CNVpattern/data/ncit/sample_ncit_filter_label_recode.tsv",
"\t", escape_double = FALSE,
trim_ws = TRUE)
label$name <- hierarchy_df$name[match(label$type,hierarchy_df$code)]
Neoplasm_Core <- read_delim("/Users/pgweb/Projects/CNVpattern/Neoplasm_Core.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
missingtype <- label$type[is.na(match(label$type,Neoplasm_Core$Code))]
missingtype
label$type
hierarchy_df$name[match(missingtype,hierarchy_df$code)]
labels <- encoder2layer_original[,3046]
samples <- read.table('/Users/pgweb/Projects/CNVpattern/data/ncit/sample_callset_IDs_filter_recode.tsv',sep = '\t',stringsAsFactors = F)
table(pop$result[pop$ID %in% samplelist])
samplelist <- samples$V1[labels$NCIT ==x]
pop_for_label <-lapply(unique(labels$NCIT), function(x) {
samplelist <- samples$V1[labels$NCIT ==x]
table(pop$result[pop$ID %in% samplelist])
} )
pop_for_label[[1]]
pop_for_label[[]]
pop_for_label[[2]]
pop_for_label <- as.data.frame(pop_for_label)
pop_for_label <-lapply(unique(labels$NCIT), function(x) {
samplelist <- samples$V1[labels$NCIT ==x]
sapply(c('AFR','AMR','EAS','EUR','SAS'),function(x) sum(pop$result[pop$ID %in% samplelist]==x))
} )
pop_for_label <- as.data.frame(pop_for_label,)
View(pop_for_label)
?as.data.frame
unique(labels$NCIT)
pop_for_label <- as.data.frame(pop_for_label,col.names = label$type)
View(pop)
View(pop_for_label)
pop_for_label <-lapply(unique(labels$NCIT), function(x) {
samplelist <- samples$V1[labels$NCIT ==x]
sapply(c('AFR','AMR','EAS','EUR','SAS'),function(x) sum(pop$result[pop$ID %in% samplelist]==x))
} )
pop_for_label <- as.data.frame(pop_for_label,col.names = label$type)
View(pop_for_label)
melt(pop_for_label)
popm = melt(pop_for_label)
View(popm)
t(pop_for_label)
pop2 <- t(pop_for_label)
popm = melt(pop2)
View(popm)
names(popm)[1:2] <- c('code','pop')
popm$name <- label$name[match(popm$code,label$type)]
View(popm)
ggplot(popm,aes(x=name,y=value,color=pop)) + geom_bar() +theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(popm,aes(x=name,y=value,color=pop)) + geom_bar(stat='identity') +theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(popm,aes(x=name,y=value,fill=pop)) + geom_bar(stat='identity') +theme(axis.text.x = element_text(angle = 45, hjust = 1))
popm <- popm[order(popm$value)]
popm <- popm[order(popm$value),]
View(popm)
View(pop2)
pop2 <- pop2[,order(apply(pop2,2,sum))]
View(pop2)
pop_for_label <- as.data.frame(pop_for_label,col.names = label$type)
pop2 <- t(pop_for_label)
pop2 <- pop2[,order(apply(pop2,2,sum))]
View(pop2)
pop_for_label <- as.data.frame(pop_for_label,col.names = label$type)
pop2 <- t(pop_for_label)
pop2 <- pop2[order(apply(pop2,1,sum)),]
View(pop2)
popm = melt(pop2)
View(popm)
pop2 <- pop2[order(apply(pop2,1,sum),decreasing = T),]
popm = melt(pop2)
names(popm)[1:2] <- c('code','pop')
popm$name <- label$name[match(popm$code,label$type)]
popm$name <- factor(popm$name,levels = unique(popm$name))
ggplot(popm,aes(x=name,y=value,fill=pop)) + geom_bar(stat='identity') +theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(popm,aes(x=name,y=value,fill=pop)) + geom_bar(stat='identity') +theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlab(NULL)
ggplot(popm,aes(x=name,y=value,fill=pop)) + geom_bar(stat='identity') +theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlab(NULL) + ylab('Number of samples')
ggsave('/Users/pgweb/Projects/CNVpattern/data/ncit/sample_sizes_pop.pdf')
ggsave('/Users/pgweb/Projects/CNVpattern/data/ncit/sample_sizes_pop.pdf',height = 8,width = 12)
Mapping250K_Nsp_na31_HB20101007_ugp <- read_delim("/Users/pgweb/Downloads/annotationData,txt/Mapping250K_Nsp,na31,HB20101007/Mapping250K_Nsp/Mapping250K_Nsp,na31,HB20101007.ugp.txt",
"\t", escape_double = FALSE, comment = "#",
trim_ws = TRUE)
Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos = paste(Mapping250K_Nsp_na31_HB20101007_ugp[,2],Mapping250K_Nsp_na31_HB20101007_ugp[,3],sep = '_')
library(readr)
Mapping250K_Nsp_na31_HB20101007_ugp <- read_delim("/Users/pgweb/Downloads/annotationData,txt/Mapping250K_Nsp,na31,HB20101007/Mapping250K_Nsp/Mapping250K_Nsp,na31,HB20101007.ugp.txt",
"\t", escape_double = FALSE, comment = "#",
trim_ws = TRUE)
Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos = paste(Mapping250K_Nsp_na31_HB20101007_ugp[,2],Mapping250K_Nsp_na31_HB20101007_ugp[,3],sep = '_')
setwd('/Users/pgweb/Projects/population/tum2pop-mapping/test_data')
platform = "Mapping250K_Nsp"
file_format = 'BAF'
targetdir <- getwd()
input_files <- list.files(targetdir)
options(stringsAsFactors = F)
dir.create(file.path(targetdir, '/tmp'), showWarnings = FALSE)
bim <- read.table(sprintf('../source/bim/plink_%s_v2.bim',platform),header=F,stringsAsFactors = F)
anno <- read.table(sprintf('../source/annotation/%s_anno.tsv',platform),header=T,stringsAsFactors = F)
bim$chr_pos <- paste(bim[,1],bim[,4],sep = '_')
anno$chr_pos <- paste(anno[,2],anno[,3],sep = '_')
f = input_files[1]
sample_name <- unlist(strsplit(f,split = '.tsv',fixed = T))[1]
fracb <- read.table(file.path(targetdir,f),header = T,stringsAsFactors = F)
fracb$chr_pos <- paste(fracb[,2],fracb[,3],sep = '_')
sum(!fracb$chr_pos %in% Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos)
head(fracb$chr_pos)
head(Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos)
Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos = paste(Mapping250K_Nsp_na31_HB20101007_ugp[[2]],Mapping250K_Nsp_na31_HB20101007_ugp[[3]],sep = '_')
head(Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos)
head(Mapping250K_Nsp_na31_HB20101007_ugp[[2]])
head(Mapping250K_Nsp_na31_HB20101007_ugp$chromosome)
Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos = paste(Mapping250K_Nsp_na31_HB20101007_ugp$chromosome,Mapping250K_Nsp_na31_HB20101007_ugp$position,sep = '_')
head(Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos,30)
head(Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos,80)
sum(!fracb$chr_pos %in% Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos)
sum(fracb$chr_pos %in% Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos)
View(Mapping250K_Nsp_na31_HB20101007_ugp)
View(fracb)
fracb$matchedpos <- Mapping250K_Nsp_na31_HB20101007_ugp[match(fracb$ID,Mapping250K_Nsp_na31_HB20101007_ugp$unitName),]$position
View(fracb)
fracb <- read.table(file.path(targetdir,f),header = T,stringsAsFactors = F)
fracb$chr_pos <- paste(fracb[,2],fracb[,3],sep = '_')
bim[which(!bim$chr_pos %in% fracb$chr_pos),]
sum(fracb$chr_pos %in% Mapping250K_Nsp_na31_HB20101007_ugp$chr_pos)
